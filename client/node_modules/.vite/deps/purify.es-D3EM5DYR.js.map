{
  "version": 3,
  "sources": ["../../dompurify/dist/purify.es.mjs"],
  "sourcesContent": ["/*! @license DOMPurify 3.2.4 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.2.4/LICENSE */\r\n\r\nconst {\r\n  entries,\r\n  setPrototypeOf,\r\n  isFrozen,\r\n  getPrototypeOf,\r\n  getOwnPropertyDescriptor\r\n} = Object;\r\nlet {\r\n  freeze,\r\n  seal,\r\n  create\r\n} = Object; // eslint-disable-line import/no-mutable-exports\r\nlet {\r\n  apply,\r\n  construct\r\n} = typeof Reflect !== 'undefined' && Reflect;\r\nif (!freeze) {\r\n  freeze = function freeze(x) {\r\n    return x;\r\n  };\r\n}\r\nif (!seal) {\r\n  seal = function seal(x) {\r\n    return x;\r\n  };\r\n}\r\nif (!apply) {\r\n  apply = function apply(fun, thisValue, args) {\r\n    return fun.apply(thisValue, args);\r\n  };\r\n}\r\nif (!construct) {\r\n  construct = function construct(Func, args) {\r\n    return new Func(...args);\r\n  };\r\n}\r\nconst arrayForEach = unapply(Array.prototype.forEach);\r\nconst arrayLastIndexOf = unapply(Array.prototype.lastIndexOf);\r\nconst arrayPop = unapply(Array.prototype.pop);\r\nconst arrayPush = unapply(Array.prototype.push);\r\nconst arraySplice = unapply(Array.prototype.splice);\r\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\r\nconst stringToString = unapply(String.prototype.toString);\r\nconst stringMatch = unapply(String.prototype.match);\r\nconst stringReplace = unapply(String.prototype.replace);\r\nconst stringIndexOf = unapply(String.prototype.indexOf);\r\nconst stringTrim = unapply(String.prototype.trim);\r\nconst objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\r\nconst regExpTest = unapply(RegExp.prototype.test);\r\nconst typeErrorCreate = unconstruct(TypeError);\r\n/**\r\n * Creates a new function that calls the given function with a specified thisArg and arguments.\r\n *\r\n * @param func - The function to be wrapped and called.\r\n * @returns A new function that calls the given function with a specified thisArg and arguments.\r\n */\r\nfunction unapply(func) {\r\n  return function (thisArg) {\r\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n      args[_key - 1] = arguments[_key];\r\n    }\r\n    return apply(func, thisArg, args);\r\n  };\r\n}\r\n/**\r\n * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\r\n *\r\n * @param func - The constructor function to be wrapped and called.\r\n * @returns A new function that constructs an instance of the given constructor function with the provided arguments.\r\n */\r\nfunction unconstruct(func) {\r\n  return function () {\r\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n      args[_key2] = arguments[_key2];\r\n    }\r\n    return construct(func, args);\r\n  };\r\n}\r\n/**\r\n * Add properties to a lookup table\r\n *\r\n * @param set - The set to which elements will be added.\r\n * @param array - The array containing elements to be added to the set.\r\n * @param transformCaseFunc - An optional function to transform the case of each element before adding to the set.\r\n * @returns The modified set with added elements.\r\n */\r\nfunction addToSet(set, array) {\r\n  let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;\r\n  if (setPrototypeOf) {\r\n    // Make 'in' and truthy checks like Boolean(set.constructor)\r\n    // independent of any properties defined on Object.prototype.\r\n    // Prevent prototype setters from intercepting set as a this value.\r\n    setPrototypeOf(set, null);\r\n  }\r\n  let l = array.length;\r\n  while (l--) {\r\n    let element = array[l];\r\n    if (typeof element === 'string') {\r\n      const lcElement = transformCaseFunc(element);\r\n      if (lcElement !== element) {\r\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\r\n        if (!isFrozen(array)) {\r\n          array[l] = lcElement;\r\n        }\r\n        element = lcElement;\r\n      }\r\n    }\r\n    set[element] = true;\r\n  }\r\n  return set;\r\n}\r\n/**\r\n * Clean up an array to harden against CSPP\r\n *\r\n * @param array - The array to be cleaned.\r\n * @returns The cleaned version of the array\r\n */\r\nfunction cleanArray(array) {\r\n  for (let index = 0; index < array.length; index++) {\r\n    const isPropertyExist = objectHasOwnProperty(array, index);\r\n    if (!isPropertyExist) {\r\n      array[index] = null;\r\n    }\r\n  }\r\n  return array;\r\n}\r\n/**\r\n * Shallow clone an object\r\n *\r\n * @param object - The object to be cloned.\r\n * @returns A new object that copies the original.\r\n */\r\nfunction clone(object) {\r\n  const newObject = create(null);\r\n  for (const [property, value] of entries(object)) {\r\n    const isPropertyExist = objectHasOwnProperty(object, property);\r\n    if (isPropertyExist) {\r\n      if (Array.isArray(value)) {\r\n        newObject[property] = cleanArray(value);\r\n      } else if (value && typeof value === 'object' && value.constructor === Object) {\r\n        newObject[property] = clone(value);\r\n      } else {\r\n        newObject[property] = value;\r\n      }\r\n    }\r\n  }\r\n  return newObject;\r\n}\r\n/**\r\n * This method automatically checks if the prop is function or getter and behaves accordingly.\r\n *\r\n * @param object - The object to look up the getter function in its prototype chain.\r\n * @param prop - The property name for which to find the getter function.\r\n * @returns The getter function found in the prototype chain or a fallback function.\r\n */\r\nfunction lookupGetter(object, prop) {\r\n  while (object !== null) {\r\n    const desc = getOwnPropertyDescriptor(object, prop);\r\n    if (desc) {\r\n      if (desc.get) {\r\n        return unapply(desc.get);\r\n      }\r\n      if (typeof desc.value === 'function') {\r\n        return unapply(desc.value);\r\n      }\r\n    }\r\n    object = getPrototypeOf(object);\r\n  }\r\n  function fallbackValue() {\r\n    return null;\r\n  }\r\n  return fallbackValue;\r\n}\r\n\r\nconst html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\r\nconst svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\r\nconst svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\r\n// List of SVG elements that are disallowed by default.\r\n// We still need to know them so that we can do namespace\r\n// checks properly in case one wants to add them to\r\n// allow-list.\r\nconst svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\r\nconst mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']);\r\n// Similarly to SVG, we want to know all MathML elements,\r\n// even those that we disallow by default.\r\nconst mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\r\nconst text = freeze(['#text']);\r\n\r\nconst html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'popover', 'popovertarget', 'popovertargetaction', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'wrap', 'xmlns', 'slot']);\r\nconst svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'amplitude', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'exponent', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'intercept', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'slope', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'tablevalues', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\r\nconst mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\r\nconst xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\r\n\r\n// eslint-disable-next-line unicorn/better-regex\r\nconst MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\r\nconst ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\r\nconst TMPLIT_EXPR = seal(/\\$\\{[\\w\\W]*/gm); // eslint-disable-line unicorn/better-regex\r\nconst DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]+$/); // eslint-disable-line no-useless-escape\r\nconst ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\r\nconst IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\r\n);\r\nconst IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\r\nconst ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\r\n);\r\nconst DOCTYPE_NAME = seal(/^html$/i);\r\nconst CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\r\n\r\nvar EXPRESSIONS = /*#__PURE__*/Object.freeze({\r\n  __proto__: null,\r\n  ARIA_ATTR: ARIA_ATTR,\r\n  ATTR_WHITESPACE: ATTR_WHITESPACE,\r\n  CUSTOM_ELEMENT: CUSTOM_ELEMENT,\r\n  DATA_ATTR: DATA_ATTR,\r\n  DOCTYPE_NAME: DOCTYPE_NAME,\r\n  ERB_EXPR: ERB_EXPR,\r\n  IS_ALLOWED_URI: IS_ALLOWED_URI,\r\n  IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\r\n  MUSTACHE_EXPR: MUSTACHE_EXPR,\r\n  TMPLIT_EXPR: TMPLIT_EXPR\r\n});\r\n\r\n/* eslint-disable @typescript-eslint/indent */\r\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\r\nconst NODE_TYPE = {\r\n  element: 1,\r\n  attribute: 2,\r\n  text: 3,\r\n  cdataSection: 4,\r\n  entityReference: 5,\r\n  // Deprecated\r\n  entityNode: 6,\r\n  // Deprecated\r\n  progressingInstruction: 7,\r\n  comment: 8,\r\n  document: 9,\r\n  documentType: 10,\r\n  documentFragment: 11,\r\n  notation: 12 // Deprecated\r\n};\r\nconst getGlobal = function getGlobal() {\r\n  return typeof window === 'undefined' ? null : window;\r\n};\r\n/**\r\n * Creates a no-op policy for internal use only.\r\n * Don't export this function outside this module!\r\n * @param trustedTypes The policy factory.\r\n * @param purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\r\n * @return The policy created (or null, if Trusted Types\r\n * are not supported or creating the policy failed).\r\n */\r\nconst _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\r\n  if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\r\n    return null;\r\n  }\r\n  // Allow the callers to control the unique policy name\r\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\r\n  // Policy creation with duplicate names throws in Trusted Types.\r\n  let suffix = null;\r\n  const ATTR_NAME = 'data-tt-policy-suffix';\r\n  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\r\n    suffix = purifyHostElement.getAttribute(ATTR_NAME);\r\n  }\r\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\r\n  try {\r\n    return trustedTypes.createPolicy(policyName, {\r\n      createHTML(html) {\r\n        return html;\r\n      },\r\n      createScriptURL(scriptUrl) {\r\n        return scriptUrl;\r\n      }\r\n    });\r\n  } catch (_) {\r\n    // Policy creation failed (most likely another DOMPurify script has\r\n    // already run). Skip creating the policy, as this will only cause errors\r\n    // if TT are enforced.\r\n    console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\r\n    return null;\r\n  }\r\n};\r\nconst _createHooksMap = function _createHooksMap() {\r\n  return {\r\n    afterSanitizeAttributes: [],\r\n    afterSanitizeElements: [],\r\n    afterSanitizeShadowDOM: [],\r\n    beforeSanitizeAttributes: [],\r\n    beforeSanitizeElements: [],\r\n    beforeSanitizeShadowDOM: [],\r\n    uponSanitizeAttribute: [],\r\n    uponSanitizeElement: [],\r\n    uponSanitizeShadowNode: []\r\n  };\r\n};\r\nfunction createDOMPurify() {\r\n  let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\r\n  const DOMPurify = root => createDOMPurify(root);\r\n  DOMPurify.version = '3.2.4';\r\n  DOMPurify.removed = [];\r\n  if (!window || !window.document || window.document.nodeType !== NODE_TYPE.document || !window.Element) {\r\n    // Not running in a browser, provide a factory function\r\n    // so that you can pass your own Window\r\n    DOMPurify.isSupported = false;\r\n    return DOMPurify;\r\n  }\r\n  let {\r\n    document\r\n  } = window;\r\n  const originalDocument = document;\r\n  const currentScript = originalDocument.currentScript;\r\n  const {\r\n    DocumentFragment,\r\n    HTMLTemplateElement,\r\n    Node,\r\n    Element,\r\n    NodeFilter,\r\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\r\n    HTMLFormElement,\r\n    DOMParser,\r\n    trustedTypes\r\n  } = window;\r\n  const ElementPrototype = Element.prototype;\r\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\r\n  const remove = lookupGetter(ElementPrototype, 'remove');\r\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\r\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\r\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\r\n  // As per issue #47, the web-components registry is inherited by a\r\n  // new document created via createHTMLDocument. As per the spec\r\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\r\n  // a new empty registry is used when creating a template contents owner\r\n  // document, so we use that as our parent document to ensure nothing\r\n  // is inherited.\r\n  if (typeof HTMLTemplateElement === 'function') {\r\n    const template = document.createElement('template');\r\n    if (template.content && template.content.ownerDocument) {\r\n      document = template.content.ownerDocument;\r\n    }\r\n  }\r\n  let trustedTypesPolicy;\r\n  let emptyHTML = '';\r\n  const {\r\n    implementation,\r\n    createNodeIterator,\r\n    createDocumentFragment,\r\n    getElementsByTagName\r\n  } = document;\r\n  const {\r\n    importNode\r\n  } = originalDocument;\r\n  let hooks = _createHooksMap();\r\n  /**\r\n   * Expose whether this browser supports running the full DOMPurify.\r\n   */\r\n  DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\r\n  const {\r\n    MUSTACHE_EXPR,\r\n    ERB_EXPR,\r\n    TMPLIT_EXPR,\r\n    DATA_ATTR,\r\n    ARIA_ATTR,\r\n    IS_SCRIPT_OR_DATA,\r\n    ATTR_WHITESPACE,\r\n    CUSTOM_ELEMENT\r\n  } = EXPRESSIONS;\r\n  let {\r\n    IS_ALLOWED_URI: IS_ALLOWED_URI$1\r\n  } = EXPRESSIONS;\r\n  /**\r\n   * We consider the elements and attributes below to be safe. Ideally\r\n   * don't add any new ones but feel free to remove unwanted ones.\r\n   */\r\n  /* allowed element names */\r\n  let ALLOWED_TAGS = null;\r\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\r\n  /* Allowed attribute names */\r\n  let ALLOWED_ATTR = null;\r\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\r\n  /*\r\n   * Configure how DOMPurify should handle custom elements and their attributes as well as customized built-in elements.\r\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\r\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\r\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\r\n   */\r\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {\r\n    tagNameCheck: {\r\n      writable: true,\r\n      configurable: false,\r\n      enumerable: true,\r\n      value: null\r\n    },\r\n    attributeNameCheck: {\r\n      writable: true,\r\n      configurable: false,\r\n      enumerable: true,\r\n      value: null\r\n    },\r\n    allowCustomizedBuiltInElements: {\r\n      writable: true,\r\n      configurable: false,\r\n      enumerable: true,\r\n      value: false\r\n    }\r\n  }));\r\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\r\n  let FORBID_TAGS = null;\r\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\r\n  let FORBID_ATTR = null;\r\n  /* Decide if ARIA attributes are okay */\r\n  let ALLOW_ARIA_ATTR = true;\r\n  /* Decide if custom data attributes are okay */\r\n  let ALLOW_DATA_ATTR = true;\r\n  /* Decide if unknown protocols are okay */\r\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\r\n  /* Decide if self-closing tags in attributes are allowed.\r\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\r\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\r\n  /* Output should be safe for common template engines.\r\n   * This means, DOMPurify removes data attributes, mustaches and ERB\r\n   */\r\n  let SAFE_FOR_TEMPLATES = false;\r\n  /* Output should be safe even for XML used within HTML and alike.\r\n   * This means, DOMPurify removes comments when containing risky content.\r\n   */\r\n  let SAFE_FOR_XML = true;\r\n  /* Decide if document with <html>... should be returned */\r\n  let WHOLE_DOCUMENT = false;\r\n  /* Track whether config is already set on this instance of DOMPurify. */\r\n  let SET_CONFIG = false;\r\n  /* Decide if all elements (e.g. style, script) must be children of\r\n   * document.body. By default, browsers might move them to document.head */\r\n  let FORCE_BODY = false;\r\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\r\n   * string (or a TrustedHTML object if Trusted Types are supported).\r\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\r\n   */\r\n  let RETURN_DOM = false;\r\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\r\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\r\n  let RETURN_DOM_FRAGMENT = false;\r\n  /* Try to return a Trusted Type object instead of a string, return a string in\r\n   * case Trusted Types are not supported  */\r\n  let RETURN_TRUSTED_TYPE = false;\r\n  /* Output should be free from DOM clobbering attacks?\r\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\r\n   */\r\n  let SANITIZE_DOM = true;\r\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\r\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\r\n   *\r\n   * HTML/DOM spec rules that enable DOM Clobbering:\r\n   *   - Named Access on Window (§7.3.3)\r\n   *   - DOM Tree Accessors (§3.1.5)\r\n   *   - Form Element Parent-Child Relations (§4.10.3)\r\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\r\n   *   - HTMLCollection (§4.2.10.2)\r\n   *\r\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\r\n   * with a constant string, i.e., `user-content-`\r\n   */\r\n  let SANITIZE_NAMED_PROPS = false;\r\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\r\n  /* Keep element content when removing element? */\r\n  let KEEP_CONTENT = true;\r\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\r\n   * of importing it into a new Document and returning a sanitized copy */\r\n  let IN_PLACE = false;\r\n  /* Allow usage of profiles like html, svg and mathMl */\r\n  let USE_PROFILES = {};\r\n  /* Tags to ignore content of when KEEP_CONTENT is true */\r\n  let FORBID_CONTENTS = null;\r\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\r\n  /* Tags that are safe for data: URIs */\r\n  let DATA_URI_TAGS = null;\r\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\r\n  /* Attributes safe for values like \"javascript:\" */\r\n  let URI_SAFE_ATTRIBUTES = null;\r\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\r\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\r\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\r\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\r\n  /* Document namespace */\r\n  let NAMESPACE = HTML_NAMESPACE;\r\n  let IS_EMPTY_INPUT = false;\r\n  /* Allowed XHTML+XML namespaces */\r\n  let ALLOWED_NAMESPACES = null;\r\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\r\n  let MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\r\n  let HTML_INTEGRATION_POINTS = addToSet({}, ['annotation-xml']);\r\n  // Certain elements are allowed in both SVG and HTML\r\n  // namespace. We need to specify them explicitly\r\n  // so that they don't get erroneously deleted from\r\n  // HTML namespace.\r\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\r\n  /* Parsing of strict XHTML documents */\r\n  let PARSER_MEDIA_TYPE = null;\r\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\r\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\r\n  let transformCaseFunc = null;\r\n  /* Keep a reference to config to pass to hooks */\r\n  let CONFIG = null;\r\n  /* Ideally, do not touch anything below this line */\r\n  /* ______________________________________________ */\r\n  const formElement = document.createElement('form');\r\n  const isRegexOrFunction = function isRegexOrFunction(testValue) {\r\n    return testValue instanceof RegExp || testValue instanceof Function;\r\n  };\r\n  /**\r\n   * _parseConfig\r\n   *\r\n   * @param cfg optional config literal\r\n   */\r\n  // eslint-disable-next-line complexity\r\n  const _parseConfig = function _parseConfig() {\r\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n    if (CONFIG && CONFIG === cfg) {\r\n      return;\r\n    }\r\n    /* Shield configuration object from tampering */\r\n    if (!cfg || typeof cfg !== 'object') {\r\n      cfg = {};\r\n    }\r\n    /* Shield configuration object from prototype pollution */\r\n    cfg = clone(cfg);\r\n    PARSER_MEDIA_TYPE =\r\n    // eslint-disable-next-line unicorn/prefer-includes\r\n    SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;\r\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\r\n    transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\r\n    /* Set configuration parameters */\r\n    ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS') ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\r\n    ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR') ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\r\n    ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES') ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\r\n    URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR') ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR, transformCaseFunc) : DEFAULT_URI_SAFE_ATTRIBUTES;\r\n    DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS') ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS, transformCaseFunc) : DEFAULT_DATA_URI_TAGS;\r\n    FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS') ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\r\n    FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS') ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\r\n    FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR') ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\r\n    USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES') ? cfg.USE_PROFILES : false;\r\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\r\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\r\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\r\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\r\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\r\n    SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false; // Default true\r\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\r\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\r\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\r\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\r\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\r\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\r\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\r\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\r\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\r\n    IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\r\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\r\n    MATHML_TEXT_INTEGRATION_POINTS = cfg.MATHML_TEXT_INTEGRATION_POINTS || MATHML_TEXT_INTEGRATION_POINTS;\r\n    HTML_INTEGRATION_POINTS = cfg.HTML_INTEGRATION_POINTS || HTML_INTEGRATION_POINTS;\r\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\r\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\r\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\r\n    }\r\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\r\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\r\n    }\r\n    if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\r\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\r\n    }\r\n    if (SAFE_FOR_TEMPLATES) {\r\n      ALLOW_DATA_ATTR = false;\r\n    }\r\n    if (RETURN_DOM_FRAGMENT) {\r\n      RETURN_DOM = true;\r\n    }\r\n    /* Parse profile info */\r\n    if (USE_PROFILES) {\r\n      ALLOWED_TAGS = addToSet({}, text);\r\n      ALLOWED_ATTR = [];\r\n      if (USE_PROFILES.html === true) {\r\n        addToSet(ALLOWED_TAGS, html$1);\r\n        addToSet(ALLOWED_ATTR, html);\r\n      }\r\n      if (USE_PROFILES.svg === true) {\r\n        addToSet(ALLOWED_TAGS, svg$1);\r\n        addToSet(ALLOWED_ATTR, svg);\r\n        addToSet(ALLOWED_ATTR, xml);\r\n      }\r\n      if (USE_PROFILES.svgFilters === true) {\r\n        addToSet(ALLOWED_TAGS, svgFilters);\r\n        addToSet(ALLOWED_ATTR, svg);\r\n        addToSet(ALLOWED_ATTR, xml);\r\n      }\r\n      if (USE_PROFILES.mathMl === true) {\r\n        addToSet(ALLOWED_TAGS, mathMl$1);\r\n        addToSet(ALLOWED_ATTR, mathMl);\r\n        addToSet(ALLOWED_ATTR, xml);\r\n      }\r\n    }\r\n    /* Merge configuration parameters */\r\n    if (cfg.ADD_TAGS) {\r\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\r\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\r\n      }\r\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\r\n    }\r\n    if (cfg.ADD_ATTR) {\r\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\r\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\r\n      }\r\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\r\n    }\r\n    if (cfg.ADD_URI_SAFE_ATTR) {\r\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\r\n    }\r\n    if (cfg.FORBID_CONTENTS) {\r\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\r\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\r\n      }\r\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\r\n    }\r\n    /* Add #text in case KEEP_CONTENT is set to true */\r\n    if (KEEP_CONTENT) {\r\n      ALLOWED_TAGS['#text'] = true;\r\n    }\r\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\r\n    if (WHOLE_DOCUMENT) {\r\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\r\n    }\r\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\r\n    if (ALLOWED_TAGS.table) {\r\n      addToSet(ALLOWED_TAGS, ['tbody']);\r\n      delete FORBID_TAGS.tbody;\r\n    }\r\n    if (cfg.TRUSTED_TYPES_POLICY) {\r\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\r\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\r\n      }\r\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\r\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\r\n      }\r\n      // Overwrite existing TrustedTypes policy.\r\n      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\r\n      // Sign local variables required by `sanitize`.\r\n      emptyHTML = trustedTypesPolicy.createHTML('');\r\n    } else {\r\n      // Uninitialized policy, attempt to initialize the internal dompurify policy.\r\n      if (trustedTypesPolicy === undefined) {\r\n        trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\r\n      }\r\n      // If creating the internal policy succeeded sign internal variables.\r\n      if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\r\n        emptyHTML = trustedTypesPolicy.createHTML('');\r\n      }\r\n    }\r\n    // Prevent further manipulation of configuration.\r\n    // Not available in IE8, Safari 5, etc.\r\n    if (freeze) {\r\n      freeze(cfg);\r\n    }\r\n    CONFIG = cfg;\r\n  };\r\n  /* Keep track of all possible SVG and MathML tags\r\n   * so that we can perform the namespace checks\r\n   * correctly. */\r\n  const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);\r\n  const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);\r\n  /**\r\n   * @param element a DOM element whose namespace is being checked\r\n   * @returns Return false if the element has a\r\n   *  namespace that a spec-compliant parser would never\r\n   *  return. Return true otherwise.\r\n   */\r\n  const _checkValidNamespace = function _checkValidNamespace(element) {\r\n    let parent = getParentNode(element);\r\n    // In JSDOM, if we're inside shadow DOM, then parentNode\r\n    // can be null. We just simulate parent in this case.\r\n    if (!parent || !parent.tagName) {\r\n      parent = {\r\n        namespaceURI: NAMESPACE,\r\n        tagName: 'template'\r\n      };\r\n    }\r\n    const tagName = stringToLowerCase(element.tagName);\r\n    const parentTagName = stringToLowerCase(parent.tagName);\r\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\r\n      return false;\r\n    }\r\n    if (element.namespaceURI === SVG_NAMESPACE) {\r\n      // The only way to switch from HTML namespace to SVG\r\n      // is via <svg>. If it happens via any other tag, then\r\n      // it should be killed.\r\n      if (parent.namespaceURI === HTML_NAMESPACE) {\r\n        return tagName === 'svg';\r\n      }\r\n      // The only way to switch from MathML to SVG is via`\r\n      // svg if parent is either <annotation-xml> or MathML\r\n      // text integration points.\r\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\r\n        return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\r\n      }\r\n      // We only allow elements that are defined in SVG\r\n      // spec. All others are disallowed in SVG namespace.\r\n      return Boolean(ALL_SVG_TAGS[tagName]);\r\n    }\r\n    if (element.namespaceURI === MATHML_NAMESPACE) {\r\n      // The only way to switch from HTML namespace to MathML\r\n      // is via <math>. If it happens via any other tag, then\r\n      // it should be killed.\r\n      if (parent.namespaceURI === HTML_NAMESPACE) {\r\n        return tagName === 'math';\r\n      }\r\n      // The only way to switch from SVG to MathML is via\r\n      // <math> and HTML integration points\r\n      if (parent.namespaceURI === SVG_NAMESPACE) {\r\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\r\n      }\r\n      // We only allow elements that are defined in MathML\r\n      // spec. All others are disallowed in MathML namespace.\r\n      return Boolean(ALL_MATHML_TAGS[tagName]);\r\n    }\r\n    if (element.namespaceURI === HTML_NAMESPACE) {\r\n      // The only way to switch from SVG to HTML is via\r\n      // HTML integration points, and from MathML to HTML\r\n      // is via MathML text integration points\r\n      if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\r\n        return false;\r\n      }\r\n      if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\r\n        return false;\r\n      }\r\n      // We disallow tags that are specific for MathML\r\n      // or SVG and should never appear in HTML namespace\r\n      return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\r\n    }\r\n    // For XHTML and XML documents that support custom namespaces\r\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\r\n      return true;\r\n    }\r\n    // The code should never reach this place (this means\r\n    // that the element somehow got namespace that is not\r\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\r\n    // Return false just in case.\r\n    return false;\r\n  };\r\n  /**\r\n   * _forceRemove\r\n   *\r\n   * @param node a DOM node\r\n   */\r\n  const _forceRemove = function _forceRemove(node) {\r\n    arrayPush(DOMPurify.removed, {\r\n      element: node\r\n    });\r\n    try {\r\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\r\n      getParentNode(node).removeChild(node);\r\n    } catch (_) {\r\n      remove(node);\r\n    }\r\n  };\r\n  /**\r\n   * _removeAttribute\r\n   *\r\n   * @param name an Attribute name\r\n   * @param element a DOM node\r\n   */\r\n  const _removeAttribute = function _removeAttribute(name, element) {\r\n    try {\r\n      arrayPush(DOMPurify.removed, {\r\n        attribute: element.getAttributeNode(name),\r\n        from: element\r\n      });\r\n    } catch (_) {\r\n      arrayPush(DOMPurify.removed, {\r\n        attribute: null,\r\n        from: element\r\n      });\r\n    }\r\n    element.removeAttribute(name);\r\n    // We void attribute values for unremovable \"is\" attributes\r\n    if (name === 'is') {\r\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\r\n        try {\r\n          _forceRemove(element);\r\n        } catch (_) {}\r\n      } else {\r\n        try {\r\n          element.setAttribute(name, '');\r\n        } catch (_) {}\r\n      }\r\n    }\r\n  };\r\n  /**\r\n   * _initDocument\r\n   *\r\n   * @param dirty - a string of dirty markup\r\n   * @return a DOM, filled with the dirty markup\r\n   */\r\n  const _initDocument = function _initDocument(dirty) {\r\n    /* Create a HTML document */\r\n    let doc = null;\r\n    let leadingWhitespace = null;\r\n    if (FORCE_BODY) {\r\n      dirty = '<remove></remove>' + dirty;\r\n    } else {\r\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\r\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\r\n      leadingWhitespace = matches && matches[0];\r\n    }\r\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\r\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\r\n      dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\r\n    }\r\n    const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\r\n    /*\r\n     * Use the DOMParser API by default, fallback later if needs be\r\n     * DOMParser not work for svg when has multiple root element.\r\n     */\r\n    if (NAMESPACE === HTML_NAMESPACE) {\r\n      try {\r\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\r\n      } catch (_) {}\r\n    }\r\n    /* Use createHTMLDocument in case DOMParser is not available */\r\n    if (!doc || !doc.documentElement) {\r\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\r\n      try {\r\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\r\n      } catch (_) {\r\n        // Syntax error if dirtyPayload is invalid xml\r\n      }\r\n    }\r\n    const body = doc.body || doc.documentElement;\r\n    if (dirty && leadingWhitespace) {\r\n      body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\r\n    }\r\n    /* Work on whole document or just its body */\r\n    if (NAMESPACE === HTML_NAMESPACE) {\r\n      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\r\n    }\r\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\r\n  };\r\n  /**\r\n   * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\r\n   *\r\n   * @param root The root element or node to start traversing on.\r\n   * @return The created NodeIterator\r\n   */\r\n  const _createNodeIterator = function _createNodeIterator(root) {\r\n    return createNodeIterator.call(root.ownerDocument || root, root,\r\n    // eslint-disable-next-line no-bitwise\r\n    NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION, null);\r\n  };\r\n  /**\r\n   * _isClobbered\r\n   *\r\n   * @param element element to check for clobbering attacks\r\n   * @return true if clobbered, false if safe\r\n   */\r\n  const _isClobbered = function _isClobbered(element) {\r\n    return element instanceof HTMLFormElement && (typeof element.nodeName !== 'string' || typeof element.textContent !== 'string' || typeof element.removeChild !== 'function' || !(element.attributes instanceof NamedNodeMap) || typeof element.removeAttribute !== 'function' || typeof element.setAttribute !== 'function' || typeof element.namespaceURI !== 'string' || typeof element.insertBefore !== 'function' || typeof element.hasChildNodes !== 'function');\r\n  };\r\n  /**\r\n   * Checks whether the given object is a DOM node.\r\n   *\r\n   * @param value object to check whether it's a DOM node\r\n   * @return true is object is a DOM node\r\n   */\r\n  const _isNode = function _isNode(value) {\r\n    return typeof Node === 'function' && value instanceof Node;\r\n  };\r\n  function _executeHooks(hooks, currentNode, data) {\r\n    arrayForEach(hooks, hook => {\r\n      hook.call(DOMPurify, currentNode, data, CONFIG);\r\n    });\r\n  }\r\n  /**\r\n   * _sanitizeElements\r\n   *\r\n   * @protect nodeName\r\n   * @protect textContent\r\n   * @protect removeChild\r\n   * @param currentNode to check for permission to exist\r\n   * @return true if node was killed, false if left alive\r\n   */\r\n  const _sanitizeElements = function _sanitizeElements(currentNode) {\r\n    let content = null;\r\n    /* Execute a hook if present */\r\n    _executeHooks(hooks.beforeSanitizeElements, currentNode, null);\r\n    /* Check if element is clobbered or can clobber */\r\n    if (_isClobbered(currentNode)) {\r\n      _forceRemove(currentNode);\r\n      return true;\r\n    }\r\n    /* Now let's check the element's type and name */\r\n    const tagName = transformCaseFunc(currentNode.nodeName);\r\n    /* Execute a hook if present */\r\n    _executeHooks(hooks.uponSanitizeElement, currentNode, {\r\n      tagName,\r\n      allowedTags: ALLOWED_TAGS\r\n    });\r\n    /* Detect mXSS attempts abusing namespace confusion */\r\n    if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\r\n      _forceRemove(currentNode);\r\n      return true;\r\n    }\r\n    /* Remove any occurrence of processing instructions */\r\n    if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {\r\n      _forceRemove(currentNode);\r\n      return true;\r\n    }\r\n    /* Remove any kind of possibly harmful comments */\r\n    if (SAFE_FOR_XML && currentNode.nodeType === NODE_TYPE.comment && regExpTest(/<[/\\w]/g, currentNode.data)) {\r\n      _forceRemove(currentNode);\r\n      return true;\r\n    }\r\n    /* Remove element if anything forbids its presence */\r\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\r\n      /* Check if we have a custom element to handle */\r\n      if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\r\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {\r\n          return false;\r\n        }\r\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {\r\n          return false;\r\n        }\r\n      }\r\n      /* Keep content except for bad-listed elements */\r\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\r\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\r\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\r\n        if (childNodes && parentNode) {\r\n          const childCount = childNodes.length;\r\n          for (let i = childCount - 1; i >= 0; --i) {\r\n            const childClone = cloneNode(childNodes[i], true);\r\n            childClone.__removalCount = (currentNode.__removalCount || 0) + 1;\r\n            parentNode.insertBefore(childClone, getNextSibling(currentNode));\r\n          }\r\n        }\r\n      }\r\n      _forceRemove(currentNode);\r\n      return true;\r\n    }\r\n    /* Check whether element has a valid namespace */\r\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\r\n      _forceRemove(currentNode);\r\n      return true;\r\n    }\r\n    /* Make sure that older browsers don't get fallback-tag mXSS */\r\n    if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\r\n      _forceRemove(currentNode);\r\n      return true;\r\n    }\r\n    /* Sanitize element content to be template-safe */\r\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {\r\n      /* Get the element's text content */\r\n      content = currentNode.textContent;\r\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\r\n        content = stringReplace(content, expr, ' ');\r\n      });\r\n      if (currentNode.textContent !== content) {\r\n        arrayPush(DOMPurify.removed, {\r\n          element: currentNode.cloneNode()\r\n        });\r\n        currentNode.textContent = content;\r\n      }\r\n    }\r\n    /* Execute a hook if present */\r\n    _executeHooks(hooks.afterSanitizeElements, currentNode, null);\r\n    return false;\r\n  };\r\n  /**\r\n   * _isValidAttribute\r\n   *\r\n   * @param lcTag Lowercase tag name of containing element.\r\n   * @param lcName Lowercase attribute name.\r\n   * @param value Attribute value.\r\n   * @return Returns true if `value` is valid, otherwise false.\r\n   */\r\n  // eslint-disable-next-line complexity\r\n  const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\r\n    /* Make sure attribute cannot clobber */\r\n    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\r\n      return false;\r\n    }\r\n    /* Allow valid data-* attributes: At least one character after \"-\"\r\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\r\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\r\n        We don't need to check the value; it's always URI safe. */\r\n    if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\r\n      if (\r\n      // First condition does a very basic check if a) it's basically a valid custom element tagname AND\r\n      // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\r\n      // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\r\n      _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||\r\n      // Alternative, second condition checks if it's an `is`-attribute, AND\r\n      // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\r\n      lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\r\n        return false;\r\n      }\r\n      /* Check value is safe. First, is attr inert? If so, is safe */\r\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {\r\n      return false;\r\n    } else ;\r\n    return true;\r\n  };\r\n  /**\r\n   * _isBasicCustomElement\r\n   * checks if at least one dash is included in tagName, and it's not the first char\r\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\r\n   *\r\n   * @param tagName name of the tag of the node to sanitize\r\n   * @returns Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\r\n   */\r\n  const _isBasicCustomElement = function _isBasicCustomElement(tagName) {\r\n    return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);\r\n  };\r\n  /**\r\n   * _sanitizeAttributes\r\n   *\r\n   * @protect attributes\r\n   * @protect nodeName\r\n   * @protect removeAttribute\r\n   * @protect setAttribute\r\n   *\r\n   * @param currentNode to sanitize\r\n   */\r\n  const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\r\n    /* Execute a hook if present */\r\n    _executeHooks(hooks.beforeSanitizeAttributes, currentNode, null);\r\n    const {\r\n      attributes\r\n    } = currentNode;\r\n    /* Check if we have attributes; if not we might have a text node */\r\n    if (!attributes || _isClobbered(currentNode)) {\r\n      return;\r\n    }\r\n    const hookEvent = {\r\n      attrName: '',\r\n      attrValue: '',\r\n      keepAttr: true,\r\n      allowedAttributes: ALLOWED_ATTR,\r\n      forceKeepAttr: undefined\r\n    };\r\n    let l = attributes.length;\r\n    /* Go backwards over all attributes; safely remove bad ones */\r\n    while (l--) {\r\n      const attr = attributes[l];\r\n      const {\r\n        name,\r\n        namespaceURI,\r\n        value: attrValue\r\n      } = attr;\r\n      const lcName = transformCaseFunc(name);\r\n      let value = name === 'value' ? attrValue : stringTrim(attrValue);\r\n      /* Execute a hook if present */\r\n      hookEvent.attrName = lcName;\r\n      hookEvent.attrValue = value;\r\n      hookEvent.keepAttr = true;\r\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\r\n      _executeHooks(hooks.uponSanitizeAttribute, currentNode, hookEvent);\r\n      value = hookEvent.attrValue;\r\n      /* Full DOM Clobbering protection via namespace isolation,\r\n       * Prefix id and name attributes with `user-content-`\r\n       */\r\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\r\n        // Remove the attribute with this value\r\n        _removeAttribute(name, currentNode);\r\n        // Prefix the value and later re-create the attribute with the sanitized value\r\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\r\n      }\r\n      /* Work around a security issue with comments inside attributes */\r\n      if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\\/(style|title)/i, value)) {\r\n        _removeAttribute(name, currentNode);\r\n        continue;\r\n      }\r\n      /* Did the hooks approve of the attribute? */\r\n      if (hookEvent.forceKeepAttr) {\r\n        continue;\r\n      }\r\n      /* Remove attribute */\r\n      _removeAttribute(name, currentNode);\r\n      /* Did the hooks approve of the attribute? */\r\n      if (!hookEvent.keepAttr) {\r\n        continue;\r\n      }\r\n      /* Work around a security issue in jQuery 3.0 */\r\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\r\n        _removeAttribute(name, currentNode);\r\n        continue;\r\n      }\r\n      /* Sanitize attribute content to be template-safe */\r\n      if (SAFE_FOR_TEMPLATES) {\r\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\r\n          value = stringReplace(value, expr, ' ');\r\n        });\r\n      }\r\n      /* Is `value` valid for this attribute? */\r\n      const lcTag = transformCaseFunc(currentNode.nodeName);\r\n      if (!_isValidAttribute(lcTag, lcName, value)) {\r\n        continue;\r\n      }\r\n      /* Handle attributes that require Trusted Types */\r\n      if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\r\n        if (namespaceURI) ; else {\r\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\r\n            case 'TrustedHTML':\r\n              {\r\n                value = trustedTypesPolicy.createHTML(value);\r\n                break;\r\n              }\r\n            case 'TrustedScriptURL':\r\n              {\r\n                value = trustedTypesPolicy.createScriptURL(value);\r\n                break;\r\n              }\r\n          }\r\n        }\r\n      }\r\n      /* Handle invalid data-* attribute set by try-catching it */\r\n      try {\r\n        if (namespaceURI) {\r\n          currentNode.setAttributeNS(namespaceURI, name, value);\r\n        } else {\r\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\r\n          currentNode.setAttribute(name, value);\r\n        }\r\n        if (_isClobbered(currentNode)) {\r\n          _forceRemove(currentNode);\r\n        } else {\r\n          arrayPop(DOMPurify.removed);\r\n        }\r\n      } catch (_) {}\r\n    }\r\n    /* Execute a hook if present */\r\n    _executeHooks(hooks.afterSanitizeAttributes, currentNode, null);\r\n  };\r\n  /**\r\n   * _sanitizeShadowDOM\r\n   *\r\n   * @param fragment to iterate over recursively\r\n   */\r\n  const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\r\n    let shadowNode = null;\r\n    const shadowIterator = _createNodeIterator(fragment);\r\n    /* Execute a hook if present */\r\n    _executeHooks(hooks.beforeSanitizeShadowDOM, fragment, null);\r\n    while (shadowNode = shadowIterator.nextNode()) {\r\n      /* Execute a hook if present */\r\n      _executeHooks(hooks.uponSanitizeShadowNode, shadowNode, null);\r\n      /* Sanitize tags and elements */\r\n      _sanitizeElements(shadowNode);\r\n      /* Check attributes next */\r\n      _sanitizeAttributes(shadowNode);\r\n      /* Deep shadow DOM detected */\r\n      if (shadowNode.content instanceof DocumentFragment) {\r\n        _sanitizeShadowDOM(shadowNode.content);\r\n      }\r\n    }\r\n    /* Execute a hook if present */\r\n    _executeHooks(hooks.afterSanitizeShadowDOM, fragment, null);\r\n  };\r\n  // eslint-disable-next-line complexity\r\n  DOMPurify.sanitize = function (dirty) {\r\n    let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n    let body = null;\r\n    let importedNode = null;\r\n    let currentNode = null;\r\n    let returnNode = null;\r\n    /* Make sure we have a string to sanitize.\r\n      DO NOT return early, as this will return the wrong type if\r\n      the user has requested a DOM object rather than a string */\r\n    IS_EMPTY_INPUT = !dirty;\r\n    if (IS_EMPTY_INPUT) {\r\n      dirty = '<!-->';\r\n    }\r\n    /* Stringify, in case dirty is an object */\r\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\r\n      if (typeof dirty.toString === 'function') {\r\n        dirty = dirty.toString();\r\n        if (typeof dirty !== 'string') {\r\n          throw typeErrorCreate('dirty is not a string, aborting');\r\n        }\r\n      } else {\r\n        throw typeErrorCreate('toString is not a function');\r\n      }\r\n    }\r\n    /* Return dirty HTML if DOMPurify cannot run */\r\n    if (!DOMPurify.isSupported) {\r\n      return dirty;\r\n    }\r\n    /* Assign config vars */\r\n    if (!SET_CONFIG) {\r\n      _parseConfig(cfg);\r\n    }\r\n    /* Clean up removed elements */\r\n    DOMPurify.removed = [];\r\n    /* Check if dirty is correctly typed for IN_PLACE */\r\n    if (typeof dirty === 'string') {\r\n      IN_PLACE = false;\r\n    }\r\n    if (IN_PLACE) {\r\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\r\n      if (dirty.nodeName) {\r\n        const tagName = transformCaseFunc(dirty.nodeName);\r\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\r\n          throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\r\n        }\r\n      }\r\n    } else if (dirty instanceof Node) {\r\n      /* If dirty is a DOM element, append to an empty document to avoid\r\n         elements being stripped by the parser */\r\n      body = _initDocument('<!---->');\r\n      importedNode = body.ownerDocument.importNode(dirty, true);\r\n      if (importedNode.nodeType === NODE_TYPE.element && importedNode.nodeName === 'BODY') {\r\n        /* Node is already a body, use as is */\r\n        body = importedNode;\r\n      } else if (importedNode.nodeName === 'HTML') {\r\n        body = importedNode;\r\n      } else {\r\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\r\n        body.appendChild(importedNode);\r\n      }\r\n    } else {\r\n      /* Exit directly if we have nothing to do */\r\n      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\r\n      // eslint-disable-next-line unicorn/prefer-includes\r\n      dirty.indexOf('<') === -1) {\r\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\r\n      }\r\n      /* Initialize the document to work on */\r\n      body = _initDocument(dirty);\r\n      /* Check we have a DOM node from the data */\r\n      if (!body) {\r\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\r\n      }\r\n    }\r\n    /* Remove first element node (ours) if FORCE_BODY is set */\r\n    if (body && FORCE_BODY) {\r\n      _forceRemove(body.firstChild);\r\n    }\r\n    /* Get node iterator */\r\n    const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\r\n    /* Now start iterating over the created document */\r\n    while (currentNode = nodeIterator.nextNode()) {\r\n      /* Sanitize tags and elements */\r\n      _sanitizeElements(currentNode);\r\n      /* Check attributes next */\r\n      _sanitizeAttributes(currentNode);\r\n      /* Shadow DOM detected, sanitize it */\r\n      if (currentNode.content instanceof DocumentFragment) {\r\n        _sanitizeShadowDOM(currentNode.content);\r\n      }\r\n    }\r\n    /* If we sanitized `dirty` in-place, return it. */\r\n    if (IN_PLACE) {\r\n      return dirty;\r\n    }\r\n    /* Return sanitized string or DOM */\r\n    if (RETURN_DOM) {\r\n      if (RETURN_DOM_FRAGMENT) {\r\n        returnNode = createDocumentFragment.call(body.ownerDocument);\r\n        while (body.firstChild) {\r\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\r\n          returnNode.appendChild(body.firstChild);\r\n        }\r\n      } else {\r\n        returnNode = body;\r\n      }\r\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\r\n        /*\r\n          AdoptNode() is not used because internal state is not reset\r\n          (e.g. the past names map of a HTMLFormElement), this is safe\r\n          in theory but we would rather not risk another attack vector.\r\n          The state that is cloned by importNode() is explicitly defined\r\n          by the specs.\r\n        */\r\n        returnNode = importNode.call(originalDocument, returnNode, true);\r\n      }\r\n      return returnNode;\r\n    }\r\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\r\n    /* Serialize doctype if allowed */\r\n    if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\r\n      serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\r\n    }\r\n    /* Sanitize final string template-safe */\r\n    if (SAFE_FOR_TEMPLATES) {\r\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\r\n        serializedHTML = stringReplace(serializedHTML, expr, ' ');\r\n      });\r\n    }\r\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\r\n  };\r\n  DOMPurify.setConfig = function () {\r\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n    _parseConfig(cfg);\r\n    SET_CONFIG = true;\r\n  };\r\n  DOMPurify.clearConfig = function () {\r\n    CONFIG = null;\r\n    SET_CONFIG = false;\r\n  };\r\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\r\n    /* Initialize shared config vars if necessary. */\r\n    if (!CONFIG) {\r\n      _parseConfig({});\r\n    }\r\n    const lcTag = transformCaseFunc(tag);\r\n    const lcName = transformCaseFunc(attr);\r\n    return _isValidAttribute(lcTag, lcName, value);\r\n  };\r\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\r\n    if (typeof hookFunction !== 'function') {\r\n      return;\r\n    }\r\n    arrayPush(hooks[entryPoint], hookFunction);\r\n  };\r\n  DOMPurify.removeHook = function (entryPoint, hookFunction) {\r\n    if (hookFunction !== undefined) {\r\n      const index = arrayLastIndexOf(hooks[entryPoint], hookFunction);\r\n      return index === -1 ? undefined : arraySplice(hooks[entryPoint], index, 1)[0];\r\n    }\r\n    return arrayPop(hooks[entryPoint]);\r\n  };\r\n  DOMPurify.removeHooks = function (entryPoint) {\r\n    hooks[entryPoint] = [];\r\n  };\r\n  DOMPurify.removeAllHooks = function () {\r\n    hooks = _createHooksMap();\r\n  };\r\n  return DOMPurify;\r\n}\r\nvar purify = createDOMPurify();\r\n\r\nexport { purify as default };\r\n//# sourceMappingURL=purify.es.mjs.map\r\n"],
  "mappings": "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",
  "names": ["freeze", "seal", "apply", "construct", "getGlobal", "_createTrustedTypesPolicy", "html", "_createHooksMap", "window", "MUSTACHE_EXPR", "ERB_EXPR", "TMPLIT_EXPR", "DATA_ATTR", "ARIA_ATTR", "IS_SCRIPT_OR_DATA", "ATTR_WHITESPACE", "CUSTOM_ELEMENT", "isRegexOrFunction", "_parseConfig", "_checkValidNamespace", "_forceRemove", "_removeAttribute", "_initDocument", "_createNodeIterator", "_isClobbered", "_isNode", "hooks", "_sanitizeElements", "_isValidAttribute", "_isBasicCustomElement", "_sanitizeAttributes", "_sanitizeShadowDOM"]
}
